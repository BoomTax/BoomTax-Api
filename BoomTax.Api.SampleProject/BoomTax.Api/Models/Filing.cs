// Code generated by Microsoft (R) AutoRest Code Generator 0.9.7.0
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

using System;
using System.Collections.Generic;
using System.Linq;
using Microsoft.Rest;
using Newtonsoft.Json.Linq;

namespace BoomTax.Api.SampleProject.Models
{
    public partial class Filing
    {
        private DateTimeOffset? _dateCreated;
        
        /// <summary>
        /// Optional.
        /// </summary>
        public DateTimeOffset? DateCreated
        {
            get { return this._dateCreated; }
            set { this._dateCreated = value; }
        }
        
        private int? _filingTypeId;
        
        /// <summary>
        /// Optional.
        /// </summary>
        public int? FilingTypeId
        {
            get { return this._filingTypeId; }
            set { this._filingTypeId = value; }
        }
        
        private IList<int?> _formIds;
        
        /// <summary>
        /// Optional.
        /// </summary>
        public IList<int?> FormIds
        {
            get { return this._formIds; }
            set { this._formIds = value; }
        }
        
        private int? _headerFormId;
        
        /// <summary>
        /// Optional.
        /// </summary>
        public int? HeaderFormId
        {
            get { return this._headerFormId; }
            set { this._headerFormId = value; }
        }
        
        private int? _id;
        
        /// <summary>
        /// Optional.
        /// </summary>
        public int? Id
        {
            get { return this._id; }
            set { this._id = value; }
        }
        
        private bool? _isEditable;
        
        /// <summary>
        /// Optional.
        /// </summary>
        public bool? IsEditable
        {
            get { return this._isEditable; }
            set { this._isEditable = value; }
        }
        
        private bool? _isEfiled;
        
        /// <summary>
        /// Optional.
        /// </summary>
        public bool? IsEfiled
        {
            get { return this._isEfiled; }
            set { this._isEfiled = value; }
        }
        
        private string _name;
        
        /// <summary>
        /// Optional.
        /// </summary>
        public string Name
        {
            get { return this._name; }
            set { this._name = value; }
        }
        
        private string _status;
        
        /// <summary>
        /// Optional.
        /// </summary>
        public string Status
        {
            get { return this._status; }
            set { this._status = value; }
        }
        
        /// <summary>
        /// Initializes a new instance of the Filing class.
        /// </summary>
        public Filing()
        {
            this.FormIds = new LazyList<int?>();
        }
        
        /// <summary>
        /// Deserialize the object
        /// </summary>
        public virtual void DeserializeJson(JToken inputObject)
        {
            if (inputObject != null && inputObject.Type != JTokenType.Null)
            {
                JToken dateCreatedValue = inputObject["DateCreated"];
                if (dateCreatedValue != null && dateCreatedValue.Type != JTokenType.Null)
                {
                    this.DateCreated = ((DateTimeOffset)dateCreatedValue);
                }
                JToken filingTypeIdValue = inputObject["FilingTypeId"];
                if (filingTypeIdValue != null && filingTypeIdValue.Type != JTokenType.Null)
                {
                    this.FilingTypeId = ((int)filingTypeIdValue);
                }
                JToken formIdsSequence = ((JToken)inputObject["FormIds"]);
                if (formIdsSequence != null && formIdsSequence.Type != JTokenType.Null)
                {
                    foreach (JToken formIdsValue in ((JArray)formIdsSequence))
                    {
                        this.FormIds.Add(((int)formIdsValue));
                    }
                }
                JToken headerFormIdValue = inputObject["HeaderFormId"];
                if (headerFormIdValue != null && headerFormIdValue.Type != JTokenType.Null)
                {
                    this.HeaderFormId = ((int)headerFormIdValue);
                }
                JToken idValue = inputObject["Id"];
                if (idValue != null && idValue.Type != JTokenType.Null)
                {
                    this.Id = ((int)idValue);
                }
                JToken isEditableValue = inputObject["IsEditable"];
                if (isEditableValue != null && isEditableValue.Type != JTokenType.Null)
                {
                    this.IsEditable = ((bool)isEditableValue);
                }
                JToken isEfiledValue = inputObject["IsEfiled"];
                if (isEfiledValue != null && isEfiledValue.Type != JTokenType.Null)
                {
                    this.IsEfiled = ((bool)isEfiledValue);
                }
                JToken nameValue = inputObject["Name"];
                if (nameValue != null && nameValue.Type != JTokenType.Null)
                {
                    this.Name = ((string)nameValue);
                }
                JToken statusValue = inputObject["Status"];
                if (statusValue != null && statusValue.Type != JTokenType.Null)
                {
                    this.Status = ((string)statusValue);
                }
            }
        }
    }
}
